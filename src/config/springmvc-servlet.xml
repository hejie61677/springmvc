<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    					http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    					http://www.springframework.org/schema/context        
    					http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/mvc 
     					http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	
	<!-- 处理器映射器  start-->	
	<!-- 使用注解驱动（mvc:annotation-driver）代替注解映射器和适配器 
	默认加载了很多参数绑定方法，比如json转换解析器-->
	<!--<mvc:annotation-driven></mvc:annotation-driven>-->
	<mvc:annotation-driven conversion-service="conversionService" validator="validator"></mvc:annotation-driven>
	<!-- 扫描controller目录下有@controller注解的类 -->
	<context:component-scan base-package="controller" /> 
	<!-- 注解映射器 
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
	</bean>-->
	<!-- 简单Url映射
	<bean id="simpleUrlHandlerMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"> 
		<property name="mappings">
			<props> 
				<prop key="/queryItems1.action">itemsController1</prop>
				<prop key="/queryItems2.action">itemsController2</prop> 
			</props>
		</property> 
	</bean>-->
	
	<!-- beanNameUrl映射 
	<bean id="beanNameUrlHandlerMapping" class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping">
	</bean>-->
	<!-- 处理器Handler配置
	<bean id="itemsController1" name="/queryItems.action" class="controller.ItemsController1">
	</bean>
	<bean id="itemsController2" class="controller.ItemsController2">
	</bean> -->
	<!-- 处理器映射器  end-->
	
	<!-- 处理器适配器  start-->
	<!-- 注解适配器 
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
	</bean>-->
	<!-- 非注解适配器 
	<bean id="simpleHandlerAdapter" class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter">
	</bean>
	<bean id="httpRequestHandlerAdapter" class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter">
	</bean>-->
	<!-- 处理器适配器  end-->	
	
	<!-- 视图解析器  start-->
	<bean id="irViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/page/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 视图解析器  end-->	
	
	<!-- 支持文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
	
	<!-- 拦截器 -->
	<mvc:interceptors>
        <mvc:interceptor>   
            <mvc:mapping path="/index"/> 
            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 --> 
            <bean class="interceptor.IndexInterceptor"/>     
        </mvc:interceptor> 
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 --> 
    </mvc:interceptors>
    
    <!-- 自定义参数绑定 -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
    	<!-- 转换器 -->
    	<property name="converters">
    		<list>
    			<!-- 日期类型转换 -->
    			<bean class="controller.converter.CustomDateConverter"></bean>
    		</list>
    	</property>
    </bean>
    
    <!-- 校验器 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- 校验器 -->
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
		<!-- 指定校验使用的资源文件,如果不指定则默认使用classpath下 的ValidationMessages.properties-->
		<property name="ValidationMessageSource" ref="messageSource"></property>
	</bean>
	<!-- 校验错误信息配置文件 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- 资源文件名 -->
		<property name="basenames">
			<list>
				<value>classpath:config/CustomValidationMessages</value>
			</list>
		</property>
		<!-- 资源文件编码格式 -->
		<property name="fileEncodings" value="utf-8"></property>
		<!-- 对资源文件内容缓存时间，单位秒 -->
		<property name="cacheSeconds" value="120"></property>
	</bean>
</beans>